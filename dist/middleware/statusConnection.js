"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = statusConnection;

















var _functions = require("../util/functions"); /*
 * Copyright 2021 WPPConnect Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */async function statusConnection(req, res, next) {try {const numbers = [];if (req.client && req.client.isConnected) {await req.client.isConnected();const localArr = (0, _functions.contactToArray)(req.body.phone || [], req.body.isGroup,
        req.body.isNewsletter,
        req.body.isLid
      );
      let index = 0;
      for (const contact of localArr) {
        if (req.body.isGroup || req.body.isNewsletter) {
          localArr[index] = contact;
        } else if (numbers.indexOf(contact) < 0) {
          console.log(contact);
          const profile = await req.client.
          checkNumberStatus(contact).
          catch((error) => console.log(error));
          if (!profile?.numberExists) {
            const num = contact.split('@')[0];
            res.status(400).json({
              response: null,
              status: 'Connected',
              message: `O número ${num} não existe.`
            });
          } else {
            if (numbers.indexOf(profile.id._serialized) < 0) {
              numbers.push(profile.id._serialized);
            }
            localArr[index] = profile.id._serialized;
          }
        }
        index++;
      }
      req.body.phone = localArr;
    } else {
      res.status(404).json({
        response: null,
        status: 'Disconnected',
        message: 'A sessão do WhatsApp não está ativa.'
      });
    }
    next();
  } catch (error) {
    req.logger.error(error);
    res.status(404).json({
      response: null,
      status: 'Disconnected',
      message: 'A sessão do WhatsApp não está ativa.'
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZnVuY3Rpb25zIiwicmVxdWlyZSIsInN0YXR1c0Nvbm5lY3Rpb24iLCJyZXEiLCJyZXMiLCJuZXh0IiwibnVtYmVycyIsImNsaWVudCIsImlzQ29ubmVjdGVkIiwibG9jYWxBcnIiLCJjb250YWN0VG9BcnJheSIsImJvZHkiLCJwaG9uZSIsImlzR3JvdXAiLCJpc05ld3NsZXR0ZXIiLCJpc0xpZCIsImluZGV4IiwiY29udGFjdCIsImluZGV4T2YiLCJjb25zb2xlIiwibG9nIiwicHJvZmlsZSIsImNoZWNrTnVtYmVyU3RhdHVzIiwiY2F0Y2giLCJlcnJvciIsIm51bWJlckV4aXN0cyIsIm51bSIsInNwbGl0Iiwic3RhdHVzIiwianNvbiIsInJlc3BvbnNlIiwibWVzc2FnZSIsImlkIiwiX3NlcmlhbGl6ZWQiLCJwdXNoIiwibG9nZ2VyIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL21pZGRsZXdhcmUvc3RhdHVzQ29ubmVjdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBDb3B5cmlnaHQgMjAyMSBXUFBDb25uZWN0IFRlYW1cclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5cclxuaW1wb3J0IHsgTmV4dEZ1bmN0aW9uLCBSZXF1ZXN0LCBSZXNwb25zZSB9IGZyb20gJ2V4cHJlc3MnO1xyXG5cclxuaW1wb3J0IHsgY29udGFjdFRvQXJyYXkgfSBmcm9tICcuLi91dGlsL2Z1bmN0aW9ucyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBzdGF0dXNDb25uZWN0aW9uKFxyXG4gIHJlcTogUmVxdWVzdCxcclxuICByZXM6IFJlc3BvbnNlLFxyXG4gIG5leHQ6IE5leHRGdW5jdGlvblxyXG4pIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgbnVtYmVyczogYW55ID0gW107XHJcbiAgICBpZiAocmVxLmNsaWVudCAmJiByZXEuY2xpZW50LmlzQ29ubmVjdGVkKSB7XHJcbiAgICAgIGF3YWl0IHJlcS5jbGllbnQuaXNDb25uZWN0ZWQoKTtcclxuXHJcbiAgICAgIGNvbnN0IGxvY2FsQXJyID0gY29udGFjdFRvQXJyYXkoXHJcbiAgICAgICAgcmVxLmJvZHkucGhvbmUgfHwgW10sXHJcbiAgICAgICAgcmVxLmJvZHkuaXNHcm91cCxcclxuICAgICAgICByZXEuYm9keS5pc05ld3NsZXR0ZXIsXHJcbiAgICAgICAgcmVxLmJvZHkuaXNMaWRcclxuICAgICAgKTtcclxuICAgICAgbGV0IGluZGV4ID0gMDtcclxuICAgICAgZm9yIChjb25zdCBjb250YWN0IG9mIGxvY2FsQXJyKSB7XHJcbiAgICAgICAgaWYgKHJlcS5ib2R5LmlzR3JvdXAgfHwgcmVxLmJvZHkuaXNOZXdzbGV0dGVyKSB7XHJcbiAgICAgICAgICBsb2NhbEFycltpbmRleF0gPSBjb250YWN0O1xyXG4gICAgICAgIH0gZWxzZSBpZiAobnVtYmVycy5pbmRleE9mKGNvbnRhY3QpIDwgMCkge1xyXG4gICAgICAgICAgY29uc29sZS5sb2coY29udGFjdCk7XHJcbiAgICAgICAgICBjb25zdCBwcm9maWxlOiBhbnkgPSBhd2FpdCByZXEuY2xpZW50XHJcbiAgICAgICAgICAgIC5jaGVja051bWJlclN0YXR1cyhjb250YWN0KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiBjb25zb2xlLmxvZyhlcnJvcikpO1xyXG4gICAgICAgICAgaWYgKCFwcm9maWxlPy5udW1iZXJFeGlzdHMpIHtcclxuICAgICAgICAgICAgY29uc3QgbnVtID0gKGNvbnRhY3QgYXMgYW55KS5zcGxpdCgnQCcpWzBdO1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgcmVzcG9uc2U6IG51bGwsXHJcbiAgICAgICAgICAgICAgc3RhdHVzOiAnQ29ubmVjdGVkJyxcclxuICAgICAgICAgICAgICBtZXNzYWdlOiBgTyBuw7ptZXJvICR7bnVtfSBuw6NvIGV4aXN0ZS5gLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGlmICgobnVtYmVycyBhcyBhbnkpLmluZGV4T2YocHJvZmlsZS5pZC5fc2VyaWFsaXplZCkgPCAwKSB7XHJcbiAgICAgICAgICAgICAgKG51bWJlcnMgYXMgYW55KS5wdXNoKHByb2ZpbGUuaWQuX3NlcmlhbGl6ZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIChsb2NhbEFyciBhcyBhbnkpW2luZGV4XSA9IHByb2ZpbGUuaWQuX3NlcmlhbGl6ZWQ7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGluZGV4Kys7XHJcbiAgICAgIH1cclxuICAgICAgcmVxLmJvZHkucGhvbmUgPSBsb2NhbEFycjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlcy5zdGF0dXMoNDA0KS5qc29uKHtcclxuICAgICAgICByZXNwb25zZTogbnVsbCxcclxuICAgICAgICBzdGF0dXM6ICdEaXNjb25uZWN0ZWQnLFxyXG4gICAgICAgIG1lc3NhZ2U6ICdBIHNlc3PDo28gZG8gV2hhdHNBcHAgbsOjbyBlc3TDoSBhdGl2YS4nLFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIG5leHQoKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgcmVxLmxvZ2dlci5lcnJvcihlcnJvcik7XHJcbiAgICByZXMuc3RhdHVzKDQwNCkuanNvbih7XHJcbiAgICAgIHJlc3BvbnNlOiBudWxsLFxyXG4gICAgICBzdGF0dXM6ICdEaXNjb25uZWN0ZWQnLFxyXG4gICAgICBtZXNzYWdlOiAnQSBzZXNzw6NvIGRvIFdoYXRzQXBwIG7Do28gZXN0w6EgYXRpdmEuJyxcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQSxJQUFBQSxVQUFBLEdBQUFDLE9BQUEsc0JBQW1ELENBbEJuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FNZSxlQUFlQyxnQkFBZ0JBLENBQzVDQyxHQUFZLEVBQ1pDLEdBQWEsRUFDYkMsSUFBa0IsRUFDbEIsQ0FDQSxJQUFJLENBQ0YsTUFBTUMsT0FBWSxHQUFHLEVBQUUsQ0FDdkIsSUFBSUgsR0FBRyxDQUFDSSxNQUFNLElBQUlKLEdBQUcsQ0FBQ0ksTUFBTSxDQUFDQyxXQUFXLEVBQUUsQ0FDeEMsTUFBTUwsR0FBRyxDQUFDSSxNQUFNLENBQUNDLFdBQVcsQ0FBQyxDQUFDLENBRTlCLE1BQU1DLFFBQVEsR0FBRyxJQUFBQyx5QkFBYyxFQUM3QlAsR0FBRyxDQUFDUSxJQUFJLENBQUNDLEtBQUssSUFBSSxFQUFFLEVBQ3BCVCxHQUFHLENBQUNRLElBQUksQ0FBQ0UsT0FBTztRQUNoQlYsR0FBRyxDQUFDUSxJQUFJLENBQUNHLFlBQVk7UUFDckJYLEdBQUcsQ0FBQ1EsSUFBSSxDQUFDSTtNQUNYLENBQUM7TUFDRCxJQUFJQyxLQUFLLEdBQUcsQ0FBQztNQUNiLEtBQUssTUFBTUMsT0FBTyxJQUFJUixRQUFRLEVBQUU7UUFDOUIsSUFBSU4sR0FBRyxDQUFDUSxJQUFJLENBQUNFLE9BQU8sSUFBSVYsR0FBRyxDQUFDUSxJQUFJLENBQUNHLFlBQVksRUFBRTtVQUM3Q0wsUUFBUSxDQUFDTyxLQUFLLENBQUMsR0FBR0MsT0FBTztRQUMzQixDQUFDLE1BQU0sSUFBSVgsT0FBTyxDQUFDWSxPQUFPLENBQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtVQUN2Q0UsT0FBTyxDQUFDQyxHQUFHLENBQUNILE9BQU8sQ0FBQztVQUNwQixNQUFNSSxPQUFZLEdBQUcsTUFBTWxCLEdBQUcsQ0FBQ0ksTUFBTTtVQUNsQ2UsaUJBQWlCLENBQUNMLE9BQU8sQ0FBQztVQUMxQk0sS0FBSyxDQUFDLENBQUNDLEtBQUssS0FBS0wsT0FBTyxDQUFDQyxHQUFHLENBQUNJLEtBQUssQ0FBQyxDQUFDO1VBQ3ZDLElBQUksQ0FBQ0gsT0FBTyxFQUFFSSxZQUFZLEVBQUU7WUFDMUIsTUFBTUMsR0FBRyxHQUFJVCxPQUFPLENBQVNVLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDMUN2QixHQUFHLENBQUN3QixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQztjQUNuQkMsUUFBUSxFQUFFLElBQUk7Y0FDZEYsTUFBTSxFQUFFLFdBQVc7Y0FDbkJHLE9BQU8sRUFBRSxZQUFZTCxHQUFHO1lBQzFCLENBQUMsQ0FBQztVQUNKLENBQUMsTUFBTTtZQUNMLElBQUtwQixPQUFPLENBQVNZLE9BQU8sQ0FBQ0csT0FBTyxDQUFDVyxFQUFFLENBQUNDLFdBQVcsQ0FBQyxHQUFHLENBQUMsRUFBRTtjQUN2RDNCLE9BQU8sQ0FBUzRCLElBQUksQ0FBQ2IsT0FBTyxDQUFDVyxFQUFFLENBQUNDLFdBQVcsQ0FBQztZQUMvQztZQUNDeEIsUUFBUSxDQUFTTyxLQUFLLENBQUMsR0FBR0ssT0FBTyxDQUFDVyxFQUFFLENBQUNDLFdBQVc7VUFDbkQ7UUFDRjtRQUNBakIsS0FBSyxFQUFFO01BQ1Q7TUFDQWIsR0FBRyxDQUFDUSxJQUFJLENBQUNDLEtBQUssR0FBR0gsUUFBUTtJQUMzQixDQUFDLE1BQU07TUFDTEwsR0FBRyxDQUFDd0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUM7UUFDbkJDLFFBQVEsRUFBRSxJQUFJO1FBQ2RGLE1BQU0sRUFBRSxjQUFjO1FBQ3RCRyxPQUFPLEVBQUU7TUFDWCxDQUFDLENBQUM7SUFDSjtJQUNBMUIsSUFBSSxDQUFDLENBQUM7RUFDUixDQUFDLENBQUMsT0FBT21CLEtBQUssRUFBRTtJQUNkckIsR0FBRyxDQUFDZ0MsTUFBTSxDQUFDWCxLQUFLLENBQUNBLEtBQUssQ0FBQztJQUN2QnBCLEdBQUcsQ0FBQ3dCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDO01BQ25CQyxRQUFRLEVBQUUsSUFBSTtNQUNkRixNQUFNLEVBQUUsY0FBYztNQUN0QkcsT0FBTyxFQUFFO0lBQ1gsQ0FBQyxDQUFDO0VBQ0o7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==